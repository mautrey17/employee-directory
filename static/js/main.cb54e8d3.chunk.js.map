{"version":3,"sources":["logo.svg","components/header.js","utils/API.js","components/search.js","components/table.js","components/employeeContainer.js","App.js","reportWebVitals.js","index.js"],"names":["style","header","background","color","Header","className","query","search","console","log","axios","get","SearchForm","props","value","desiredName","onChange","handleInputChange","type","handleOrderChange","Table","filteredArr","results","filter","employee","name","first","toLowerCase","includes","last","scope","map","title","cell","email","location","country","gender","EmployeeContainer","state","number","order","getEmployees","API","then","res","setState","data","catch","err","event","target","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb54e8d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nconst style = {\r\n    header: {\r\n        background: \"#7709F6\",\r\n        color: \"#E4DD1B\"\r\n    }\r\n}\r\n\r\n//#88F609\r\n\r\nfunction Header() {\r\n    return (\r\n            <h1 className=\"text-center p-5\" style={style.header}>Employee Directory</h1>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nexport default {\r\n    search: function(query) {\r\n        let search = query ? `?${query}` : '?results=15';\r\n        console.log('https://randomuser.me/api/' + search);\r\n        return axios.get('https://randomuser.me/api/' + search)\r\n    }\r\n}","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form className=\"m-3\">\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <label className=\"mr-3\">Search by employee:</label>\r\n                    <input \r\n                        value={props.desiredName}\r\n                        onChange={props.handleInputChange}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"mr-3\">Order by:</label>\r\n                    <select onChange={props.handleOrderChange}>\r\n                        <option>Order</option> \r\n                        <option>First Name</option>\r\n                        <option>Last Name</option>\r\n                        <option>Country</option>\r\n                        <option>Gender</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\n\r\nfunction Table(props) {\r\n    //filter out employees with names that do not match the searched name\r\n    const filteredArr = props.results.filter(employee => employee.name.first.toLowerCase().includes(props.desiredName) || employee.name.last.toLowerCase().includes(props.desiredName))\r\n    \r\n    return (\r\n        <table className=\"table mb-5\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Phone</th>                   \r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Country</th>\r\n                    <th scope=\"col\">Gender</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{\r\n                //if there is currently no name being searched, display all employees\r\n                props.desiredName === '' ? \r\n                    props.results.map(employee => (\r\n                        <tr>\r\n                            <td>{`${employee.name.title} ${employee.name.first} ${employee.name.last}`}</td>\r\n                            <td>{employee.cell}</td>\r\n                            <td>{employee.email}</td>\r\n                            <td>{employee.location.country}</td>\r\n                            <td>{employee.gender}</td>\r\n                        </tr>\r\n                    )) \r\n                    :\r\n                    //only display the employees with a name that matches the searched name\r\n                    filteredArr.map(employee => (\r\n                        <tr>\r\n                            <td>{`${employee.name.title} ${employee.name.first} ${employee.name.last}`}</td>\r\n                            <td>{employee.cell}</td>\r\n                            <td>{employee.email}</td>\r\n                            <td>{employee.location.country}</td>\r\n                            <td>{employee.gender}</td>\r\n                        </tr>\r\n                    )) \r\n                }\r\n            \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Search from \"../components/search\";\r\nimport Table from \"../components/table\"\r\n\r\nclass EmployeeContainer extends Component {\r\n    state = {\r\n        number: \"\",\r\n        results: [],\r\n        desiredName: \"\",\r\n        order: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getEmployees(this.state.number);\r\n    };\r\n\r\n    getEmployees = query => {\r\n        API.search(query)\r\n            .then(res => {\r\n                // console.log(res.data.results)\r\n                this.setState({ results: res.data.results})\r\n                console.log('state', this.state.results)\r\n            })\r\n            \r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const {value} = event.target;\r\n\r\n        this.setState({\r\n            desiredName: value\r\n        })\r\n    }\r\n    handleOrderChange = event => {\r\n        const {value} = event.target;\r\n\r\n        this.setState({\r\n            order: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Search \r\n                    results={this.state.results} \r\n                    handleInputChange={this.handleInputChange} \r\n                    desiredName={this.state.desiredName} \r\n                    order={this.state.order}\r\n                    handleOrderChange={this.handleOrderChange}\r\n                />\r\n                <Table \r\n                    results={this.state.results} \r\n                    desiredName={this.state.desiredName}\r\n                    order={this.state.order} \r\n                />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default EmployeeContainer;","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header'\nimport EmployeeContainer from './components/employeeContainer';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <EmployeeContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}